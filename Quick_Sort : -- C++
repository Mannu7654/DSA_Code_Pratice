// Divide and Conquer Applications
// Quick Sort Program

#include<bits/stdc++.h>
using namespace std;

void swap(int *m, int *n)
{
	int p=*m;
	*m= *n;
	*n= p;
}

int partition(int arr[], int s, int e)
{
	int pivot=arr[e];
	
	int i= s-1;
	
	for(int j=s; j<=e-1; j++)
	{
		if(arr[j] <= pivot)
		{
			i++;
			swap(&arr[i], &arr[j]);
		}
	}
	swap(&arr[i+1], &arr[e]);
	
	return (i+1);
}

int quickSort(int arr[], int s, int e)
{
	if(s<e)
	{
		int pivot= partition(arr, s, e);
		
		quickSort(arr, s, pivot-1);
		
		quickSort(arr, pivot+1, e);
	}
}

int display(int arr[], int n)
{
	for(int i=0;i<n;i++)
	{
		cout<<arr[i]<<" ";
	}
}

int main()
{
	int arr[]= {12,5,3,7,25,65,10,44};
	int n= sizeof(arr)/ sizeof(arr[0]);
	
	quickSort(arr, 0, n-1);
	
	display(arr, n); 
	
	return 0;
}
