// Divide and Conquer Applications
// Binary Search Program

#include<bits/stdc++.h>
using namespace std;

// Binary Search using Iterative method

int binarySearch(int arr[], int n, int ele)
{
	sort(arr, arr+n);
	int s=0;   // Starting index
	int e=n-1;  // Ending index
	
	while(s<=e)
	{
		int mid= s + (e-s)/2;
		
		if(arr[mid] == ele)
		{
			return mid;
		}
		else if(arr[mid] > ele)
		{
			e= mid-1;
		}
		else
		{
			s= mid+1;
		}
	}
	
	return -1;
}

// Binary Search using Recursive method

int binarySearchRecursive(int arr[], int s, int e, int ele)
{
	while(s<=e)
	{
		int mid= s + (e-s)/2;
		
		if(arr[mid] == ele)
		{
			return mid;
		}
		else if(arr[mid] > ele)
		{
			return binarySearchRecursive(arr, s, mid-1, ele);
		}
		else
		{
			return binarySearchRecursive(arr, mid-1, e, ele);
		}
	}
	
	return -1;
}


int main()
{
	int n, ele;
	cout<<"Enter the searching element in the array: --"<<endl;
	cin>>ele;
	
	int arr[]= {12,5,3,7,25,65,10,44};
	n= sizeof(arr)/sizeof(arr[0]);
	
//	int res= binarySearch(arr, n, ele);
	
	int res= binarySearchRecursive(arr, 0, n-1, ele);
	
	if(res == -1)
	{
		cout<<"\nElement not found"<<endl;
	}
	else
	{
		cout<<"\nThe element "<<ele<<" find on the index "<<res<<endl;
	}
	
	return 0;
}
